% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial.R
\name{spatials}
\alias{spatials}
\alias{hexbin_points}
\alias{hexbin_raster}
\alias{mixedvar_distance}
\alias{dist_pairwisedata}
\alias{apprx_nneighbor}
\alias{distance_degree2metre}
\alias{mindistance_degree2metre}
\alias{is_longlat}
\alias{make_iso}
\alias{make_timedistance}
\alias{inner_join.sf}
\title{The hexbin_points function}
\usage{
hexbin_points(points, n, fun, z, buffer = 0.1, return.na = FALSE)

hexbin_raster(r, n, fun)

mixedvar_distance(
  data,
  diag = FALSE,
  upper = FALSE,
  scale_method = c("range", "sd", "none"),
  tol = 0.00000001
)

dist_pairwisedata(
  x,
  y,
  method = c("euclidean", "maximum", "manhattan", "canberra", "binary", "minkowski"),
  by_row = FALSE,
  p_mnkw = 2,
  is_geo = TRUE
)

apprx_nneighbor(x, y = NULL, neighbors = 1)

distance_degree2metre(data, ...)

mindistance_degree2metre(data, ...)

is_longlat(x, ...)

make_iso(
  coords,
  ninit = 1000,
  breaks = c(3, 5, 7, 10, 15),
  crs = 31979,
  osrm_server = getOption("osrm.server", "http://127.0.0.1:5000/")
)

make_timedistance(
  from,
  to,
  osrm_server = "http://127.0.0.1:5000/",
  by_row = FALSE,
  max_time = NULL
)

\method{inner_join}{sf}(
  x,
  y,
  by = NULL,
  copy = FALSE,
  suffix = c(".x", ".y"),
  ...,
  keep = FALSE,
  na_matches = c("na", "never")
)
}
\description{
The hexbin_points function

The hexbin_raster function

mixedvar_distance

dist_pairwisedata

apprx_nneighbor

distancia en metros desde unidad de grados latlon

filtro por minima distancia

is_longlat

make_iso

make_timedistance

inner_join sf
}
\examples{


library(sp)
library(sf)
data <- mgalda::hexbin_data$vaccination

# Get mean coverage per hexbin
hexbin_points(
  points = data,
  n = 250,
  fun = mean,
  z = "coverage"
)

# Get number of points per hexbin
hexbin_points(
  points = data,
  n = 250,
  fun = length,
  z = "coverage"
)
# Generate hexbins and calculate raster mean in each bin

hexbin_raster(
  mgalda::hexbin_data$evel,
  n = 100,
  fun = function(x) {
    mean(x, na.rm = TRUE)
  }
)

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/breaktize.R
\name{breaktize}
\alias{breaktize}
\alias{breaktize.default}
\alias{break_object}
\alias{predict.breaktize}
\alias{breaktize_vec}
\alias{breaktize.quantile}
\alias{breaktize.tree}
\alias{breaktize.kmean}
\alias{breaktize.equalwidth}
\alias{breaktize.equalsize}
\alias{step_breaktize}
\alias{tidy.step_breaktize}
\alias{tunable.step_breaktize}
\title{discretizar variables}
\usage{
breaktize(
  .data = NULL,
  num_breaks = NULL,
  algorithm = c("quantile", "trees", "kmean", "equalwidth"),
  ...
)

\method{breaktize}{default}(
  .data = NULL,
  num_breaks = NULL,
  algorithm = c("quantile", "trees", "kmean", "equalwidth"),
  ...
)

break_object(
  var,
  num_breaks,
  algorithm = c("quantile", "trees", "kmean", "equalwidth")
)

\method{predict}{breaktize}(object, new_data = NULL, keep = F)

breaktize_vec(
  var,
  num_breaks,
  algorithm = c("quantile", "trees", "kmean", "equalwidth")
)

\method{breaktize}{quantile}(var, num_breaks)

\method{breaktize}{tree}(var, num_breaks)

\method{breaktize}{kmean}(var, num_breaks)

\method{breaktize}{equalwidth}(var, num_breaks)

\method{breaktize}{equalsize}(var, num_breaks)

step_breaktize(
  recipe,
  ...,
  role = NA,
  trained = FALSE,
  algorithm = "equalwidth",
  objects = NULL,
  num_breaks = 10,
  skip = FALSE,
  id = recipes::rand_id("breaktize")
)

\method{tidy}{step_breaktize}(x, ...)

\method{tunable}{step_breaktize}(x, ...)
}
\arguments{
\item{num_breaks}{numero cortes}

\item{algorithm}{algoritmo de corte}

\item{var}{variable a transformar}

\item{new_data}{data para predict}

\item{x}{A `step_breaktize` object.}

\item{dataset}{df}
}
\value{
objeto clase breaktize

objeto clase breaktize

objeto clase breaktize

vector transformado
}
\description{
discretizar variables

objeto para vector

predict breaks

transformar vector

breaktize step

tunable methods
}
\concept{preprocessing}
\keyword{datagen}
\keyword{internal}

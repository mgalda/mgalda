% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mltools.R
\name{mltools}
\alias{mltools}
\alias{predict.xlm}
\alias{predict.xloess}
\alias{pop_rollmean}
\alias{pop_nonlinear}
\alias{pop_linear}
\alias{nearmiss}
\alias{smooth_nonlinear}
\alias{smooth_nonlinear_impl}
\alias{smooth_outliers}
\alias{predict.smooth_linear}
\alias{boots_cooks_dist}
\alias{cooks_dist}
\alias{balance_data}
\alias{smote_balance}
\alias{smote_balance_impl}
\alias{nearmiss_balance}
\alias{nearmiss_balance_impl}
\title{mltools}
\usage{
\method{predict}{xlm}(object, new_data)

\method{predict}{xloess}(object, new_data)

pop_rollmean(
  .data,
  var,
  arrange_vars,
  times = 5,
  new_obs = floor(0.2 * nrow(.data))
)

pop_nonlinear(.data, x, y, times = 5, new_obs = floor(0.2 * nrow(.data)))

pop_linear(.data, response, times = 5, rep = 3, new_obs = 1000)

nearmiss(.data, class_var, ignore_vars = NULL, k = 5, under_ratio = 1)

smooth_nonlinear(.data, x, y, times = 5, rep = 2)

smooth_nonlinear_impl(.data, x, y, times = 5)

smooth_outliers(.data, response, times, rep, ...)

\method{predict}{smooth_linear}(object, new_data)

boots_cooks_dist(.data, response, times = 4, rep = 2, ...)

cooks_dist(.data, response, ...)

balance_data(.data, class_var)

smote_balance(dataset, ..., range_n)

smote_balance_impl(dataset, ..., range_n)

nearmiss_balance(dataset, ..., range_n)

nearmiss_balance_impl(dataset, ..., range_n)
}
\arguments{
\item{object}{A \code{smooth_linear} object.}

\item{new_data}{A data frame or matrix of new predictors.}

\item{.data}{dataset}

\item{arrange_vars}{variables para ordenar el promedio movil}

\item{times}{repeticiones}

\item{...}{variables a poblar}
}
\value{
A tibble of predictions. The number of rows in the tibble is guaranteed
to be the same as the number of rows in \code{new_data}.

A tibble of predictions. The number of rows in the tibble is guaranteed
to be the same as the number of rows in \code{new_data}.

A tibble of predictions. The number of rows in the tibble is guaranteed
to be the same as the number of rows in \code{new_data}.
}
\description{
mltools

Predict from a \code{xlm}

Predict from a \code{xloess}

Predict from a \code{smooth_linear}
}
\examples{


balance_data(
  .data = dplyr::select(mgalda::datalearn$credit, status, where(is_dblint)),
  class_var = "status"
)

boots_cooks_dist(
  .data = dplyr::select_if(mgalda::datalearn$housing_market, is_dblint),
  response = sales_price,
  times = 3,
  rep = 4,
  everything()
)

cooks_dist(
  .data = dplyr::select_if(mgalda::datalearn$housing_market, is_dblint),
  response = sales_price,
  everything()
)

pop_linear(
  .data = dplyr::select_if(mgalda::datalearn$housing_market, is_dblint),
  response = sales_price
)

pop_nonlinear(
  .data = dplyr::select_if(mgalda::datalearn$housing_market, is_dblint),
  x = sales_price_coefficient_variance,
  y = sales_price,
  times = 4,
  new_obs = 200
)

pop_rollmean(
  .data = dplyr::select_if(mgalda::datalearn$housing_market, is_dblint),
  arrange_vars = sales20092010,
  var = sales_price,
  times = 4,
  new_obs = 100
)

smooth_linear(
  sales_price ~ .,
  dplyr::select_if(mgalda::datalearn$housing_market, is_dblint),
  times = 4,
  rep = 5
)

smooth_nonlinear(
  .data = dplyr::select_if(mgalda::datalearn$housing_market, is_dblint),
  x = sales_price_coefficient_variance,
  y = sales_price,
  times = 4,
  rep = 3
)

smooth_outliers(
  .data = dplyr::select_if(mgalda::datalearn$housing_market, is_dblint),
  response = sales_price,
  times = 5,
  rep = 3,
  everything()
)

smote(
  .data = dplyr::select(mgalda::datalearn$credit, status, where(is_dblint)),
  class_var = status
)

xlm(sales_price ~ .,
  mgalda::datalearn$housing_market,
  times = 4,
  rep = 5
)

xloess(
  sales_price ~ .,
  dplyr::select_if(mgalda::datalearn$housing_market, is_dblint),
  times = 4,
  rep = 5
)
}
\keyword{internal}
